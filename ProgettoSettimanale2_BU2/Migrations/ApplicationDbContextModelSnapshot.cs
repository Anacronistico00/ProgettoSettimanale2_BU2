// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgettoSettimanale2_BU2.Data;

#nullable disable

namespace ProgettoSettimanale2_BU2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "69e20207-7646-4b2e-a919-388c04fff968",
                            ConcurrencyStamp = "69e20207-7646-4b2e-a919-388c04fff968",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "5fecb2ea-5a75-422f-a183-5b59bc6bfb8e",
                            ConcurrencyStamp = "5fecb2ea-5a75-422f-a183-5b59bc6bfb8e",
                            Name = "Responsabile",
                            NormalizedName = "RESPONSABILE"
                        },
                        new
                        {
                            Id = "73ec3006-1868-4363-aedb-f2b4077000a7",
                            ConcurrencyStamp = "73ec3006-1868-4363-aedb-f2b4077000a7",
                            Name = "Dipendente",
                            NormalizedName = "DIPENDENTE"
                        });
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Camera", b =>
                {
                    b.Property<Guid>("CameraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Disponibile")
                        .HasColumnType("bit");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("CameraId");

                    b.HasIndex("TipoId");

                    b.ToTable("Camere");

                    b.HasData(
                        new
                        {
                            CameraId = new Guid("0653da65-0ef4-4fc0-8e53-f37f46f45c9b"),
                            Disponibile = true,
                            Numero = 101,
                            Prezzo = 80.00m,
                            TipoId = 1
                        },
                        new
                        {
                            CameraId = new Guid("2ae45393-2cb0-4959-9708-851dfb067be0"),
                            Disponibile = true,
                            Numero = 102,
                            Prezzo = 120.00m,
                            TipoId = 2
                        },
                        new
                        {
                            CameraId = new Guid("48be4bb4-4b98-46e1-8ccd-72e6919fb8d9"),
                            Disponibile = true,
                            Numero = 103,
                            Prezzo = 150.00m,
                            TipoId = 3
                        },
                        new
                        {
                            CameraId = new Guid("070691bd-aa76-48e3-a7e9-f7df09816da2"),
                            Disponibile = true,
                            Numero = 104,
                            Prezzo = 180.00m,
                            TipoId = 4
                        },
                        new
                        {
                            CameraId = new Guid("86ef79ff-48cf-4bd0-932c-867df9fd14b3"),
                            Disponibile = true,
                            Numero = 110,
                            Prezzo = 250.00m,
                            TipoId = 5
                        },
                        new
                        {
                            CameraId = new Guid("80610273-6624-4654-b436-50e42784a5d7"),
                            Disponibile = true,
                            Numero = 201,
                            Prezzo = 85.00m,
                            TipoId = 1
                        },
                        new
                        {
                            CameraId = new Guid("1042ff70-86f4-4934-98bd-a3d9b91baa11"),
                            Disponibile = true,
                            Numero = 202,
                            Prezzo = 130.00m,
                            TipoId = 2
                        },
                        new
                        {
                            CameraId = new Guid("f091f315-0408-4994-91b0-762e36f610a1"),
                            Disponibile = true,
                            Numero = 203,
                            Prezzo = 160.00m,
                            TipoId = 3
                        },
                        new
                        {
                            CameraId = new Guid("6072ac5f-22b3-49ad-9b44-b2c89b385a8a"),
                            Disponibile = true,
                            Numero = 204,
                            Prezzo = 200.00m,
                            TipoId = 4
                        },
                        new
                        {
                            CameraId = new Guid("aac6e187-4ec9-4071-8a30-718d47c1433c"),
                            Disponibile = true,
                            Numero = 210,
                            Prezzo = 270.00m,
                            TipoId = 5
                        });
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClienteId");

                    b.HasIndex("UserId");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Prenotazione", b =>
                {
                    b.Property<Guid>("PrenotazioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CameraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataFine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatoId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PrenotazioneId");

                    b.HasIndex("CameraId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("StatoId");

                    b.HasIndex("UserId");

                    b.ToTable("Prenotazioni");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Stato", b =>
                {
                    b.Property<int>("StatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatoId"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatoId");

                    b.ToTable("Stati");

                    b.HasData(
                        new
                        {
                            StatoId = 1,
                            Nome = "Prenotato"
                        },
                        new
                        {
                            StatoId = 2,
                            Nome = "Confermato"
                        },
                        new
                        {
                            StatoId = 3,
                            Nome = "Pagato"
                        },
                        new
                        {
                            StatoId = 4,
                            Nome = "Annullato"
                        });
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipiCamere");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Singola"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Doppia"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Tripla"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Quadrupla"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Suite"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationRole", "Role")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", "User")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Camera", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.Tipo", "Tipo")
                        .WithMany("Camere")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Cliente", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", "User")
                        .WithMany("Clienti")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Prenotazione", b =>
                {
                    b.HasOne("ProgettoSettimanale2_BU2.Models.Camera", "Camera")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("CameraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgettoSettimanale2_BU2.Models.Cliente", "Cliente")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgettoSettimanale2_BU2.Models.Stato", "Stato")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("StatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgettoSettimanale2_BU2.Models.ApplicationUser", "User")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("UserId");

                    b.Navigation("Camera");

                    b.Navigation("Cliente");

                    b.Navigation("Stato");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationRole", b =>
                {
                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserRoles");

                    b.Navigation("Clienti");

                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Camera", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Cliente", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Stato", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ProgettoSettimanale2_BU2.Models.Tipo", b =>
                {
                    b.Navigation("Camere");
                });
#pragma warning restore 612, 618
        }
    }
}
